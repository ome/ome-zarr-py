name: Build

on: [push, pull_request]

jobs:
  test:
    name: Test ${{ matrix.os }} / ${{ matrix.toxenv }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          #- {os: windows-latest, python_Version: '3.7', toxenv: 'py37'}
          #- {os: windows-latest, python_Version: '3.8', toxenv: 'py38'}
          #- {os: windows-latest, python_Version: '3.9', toxenv: 'py39'}
          # Linux still not working
          # {os: linux-latest, python_Version: '3.7', toxenv: 'py37'}
          # {os: linux-latest, python_Version: '3.8', toxenv: 'py38'}
          # {os: linux-latest, python_Version: '3.9', toxenv: 'py39'}
          #- {os: macos-latest, python_Version: '3.7', toxenv: 'py37'}
          - {os: macos-latest, python_Version: '3.8', toxenv: 'py38'}
          # missing numcodecs wheels on 3.9. conda not yet an option. see gh-51
          # {os: macos-latest, python_Version: '3.9', toxenv: 'py39'}

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        name: Install Python ${{ matrix.python_version }}
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install ubuntu libraries
        if: startsWith(matrix.os, 'ubuntu')
        run: "\
            sudo apt-get install -y \
            libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 \
            libxcb-render-util0 libxcb-xinerama0 \
            libxcb-xinput0 libxcb-xfixes0"

      - name: Install & test
        run: |
          python -m pip install -U pip setuptools wheel pytest
          python -m pip install -r requirements/requirements-dev.txt
          tox -e ${{ matrix.toxenv }}

  test_coverage:
    name: Test coverage
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        name: Install Python '3.7'
        with:
          python-version: '3.7'

      - name: Install dependencies
        run: |
          python -m pip install -r requirements/requirements-dev.txt

      - name: Test
        run: tox -e  'py37-coverage'

      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  dispatch:
    name: Dispatch event to test_suite
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: post
        run: |
          curl -X POST \
               -H "Accept: application/vnd.github.v3+json" \
               -H "Authorization: 'Bearer ${process.env.GITHUB_TOKEN}'" \
               --data '{"event_type": "run_test_suite", "client_payload": { "version": "1.2.3"}}' \
               https://api.github.com/repos/ome/ome_zarr_test_suite/dispatches
      # yamllint disable rule:line-length
      # - name: Dispatch event to ome_zarr_test_suite.
        # uses: peter-evans/repository-dispatch@v1
        # with:
        #  token: ${{ secrets.ACTION_API_TOKEN }}
        #  event-type: run_test_suite
        #  repository: ome/ome_zarr_test_suite
        #  client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.event.pull_request.head.sha }}", "repo": "${{ github.repository }}", "owner": "${{github.repository_owner}}", "number": "${{github.event.number}}"}'
